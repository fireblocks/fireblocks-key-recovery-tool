# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: crypto_get_live_hash.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from utils.hbar_impl.gen import basic_types_pb2 as basic__types__pb2
from utils.hbar_impl.gen import query_header_pb2 as query__header__pb2
from utils.hbar_impl.gen import response_header_pb2 as response__header__pb2
from utils.hbar_impl.gen import crypto_add_live_hash_pb2 as crypto__add__live__hash__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='crypto_get_live_hash.proto',
  package='proto',
  syntax='proto3',
  serialized_options=b'\n\"com.hederahashgraph.api.proto.javaP\001',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1a\x63rypto_get_live_hash.proto\x12\x05proto\x1a\x11\x62\x61sic_types.proto\x1a\x12query_header.proto\x1a\x15response_header.proto\x1a\x1a\x63rypto_add_live_hash.proto\"o\n\x16\x43ryptoGetLiveHashQuery\x12\"\n\x06header\x18\x01 \x01(\x0b\x32\x12.proto.QueryHeader\x12#\n\taccountID\x18\x02 \x01(\x0b\x32\x10.proto.AccountID\x12\x0c\n\x04hash\x18\x03 \x01(\x0c\"e\n\x19\x43ryptoGetLiveHashResponse\x12%\n\x06header\x18\x01 \x01(\x0b\x32\x15.proto.ResponseHeader\x12!\n\x08liveHash\x18\x02 \x01(\x0b\x32\x0f.proto.LiveHashB&\n\"com.hederahashgraph.api.proto.javaP\x01\x62\x06proto3'
  ,
  dependencies=[basic__types__pb2.DESCRIPTOR,query__header__pb2.DESCRIPTOR,response__header__pb2.DESCRIPTOR,crypto__add__live__hash__pb2.DESCRIPTOR,])




_CRYPTOGETLIVEHASHQUERY = _descriptor.Descriptor(
  name='CryptoGetLiveHashQuery',
  full_name='proto.CryptoGetLiveHashQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='proto.CryptoGetLiveHashQuery.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='accountID', full_name='proto.CryptoGetLiveHashQuery.accountID', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hash', full_name='proto.CryptoGetLiveHashQuery.hash', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=127,
  serialized_end=238,
)


_CRYPTOGETLIVEHASHRESPONSE = _descriptor.Descriptor(
  name='CryptoGetLiveHashResponse',
  full_name='proto.CryptoGetLiveHashResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='proto.CryptoGetLiveHashResponse.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='liveHash', full_name='proto.CryptoGetLiveHashResponse.liveHash', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=240,
  serialized_end=341,
)

_CRYPTOGETLIVEHASHQUERY.fields_by_name['header'].message_type = query__header__pb2._QUERYHEADER
_CRYPTOGETLIVEHASHQUERY.fields_by_name['accountID'].message_type = basic__types__pb2._ACCOUNTID
_CRYPTOGETLIVEHASHRESPONSE.fields_by_name['header'].message_type = response__header__pb2._RESPONSEHEADER
_CRYPTOGETLIVEHASHRESPONSE.fields_by_name['liveHash'].message_type = crypto__add__live__hash__pb2._LIVEHASH
DESCRIPTOR.message_types_by_name['CryptoGetLiveHashQuery'] = _CRYPTOGETLIVEHASHQUERY
DESCRIPTOR.message_types_by_name['CryptoGetLiveHashResponse'] = _CRYPTOGETLIVEHASHRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CryptoGetLiveHashQuery = _reflection.GeneratedProtocolMessageType('CryptoGetLiveHashQuery', (_message.Message,), {
  'DESCRIPTOR' : _CRYPTOGETLIVEHASHQUERY,
  '__module__' : 'crypto_get_live_hash_pb2'
  # @@protoc_insertion_point(class_scope:proto.CryptoGetLiveHashQuery)
  })
_sym_db.RegisterMessage(CryptoGetLiveHashQuery)

CryptoGetLiveHashResponse = _reflection.GeneratedProtocolMessageType('CryptoGetLiveHashResponse', (_message.Message,), {
  'DESCRIPTOR' : _CRYPTOGETLIVEHASHRESPONSE,
  '__module__' : 'crypto_get_live_hash_pb2'
  # @@protoc_insertion_point(class_scope:proto.CryptoGetLiveHashResponse)
  })
_sym_db.RegisterMessage(CryptoGetLiveHashResponse)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
